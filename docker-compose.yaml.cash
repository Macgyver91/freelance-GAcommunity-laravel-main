version: "3.9"

services:
  mariadb:
    image: mariadb:10.4.19
    container_name: ga_mariadb
    # command: --init-file /data/sql_init/init.sql

    environment:
      # ALLOW_EMPTY_PASSWORD is recommended only for development.
      # - ALLOW_EMPTY_PASSWORD=yes
      - MARIADB_USER=gacom
      - MARIADB_PASSWORD=gacom
      - MARIADB_DATABASE=gacom
      # - MARIADB_ROOT_PASSWORD=1234567890
      - MARIADB_RANDOM_ROOT_PASSWORD=yes
    volumes:
      - db-data:/var/lib/mysql
      - ./sql_init/init.sql:/data/sql_init/init.sql

    healthcheck:
      test: ["CMD", "mysqladmin", "ping", "-h", "localhost"]
      timeout: 3s
      retries: 20

  laravel:
    build:
      context: "./"
      dockerfile: dockerfile
    image: gacommunity-laravel:1.0
    container_name: ga_laravel
    restart: "unless-stopped"
    ports:
      - "8000:8000"
    # For development purpose only
    volumes:
      - ./:/home/laravel
    depends_on:
      mariadb:
        condition: service_healthy

    environment:
      # default configuration for running the project locally
      - DB_HOST=mariadb
      - DB_USERNAME=gacom
      # - DB_DATABASE=laravel
      - DB_DATABASE=gacom
      - DB_PASSWORD=gacom
      - APP_DEBUG=true
      - APP_NAME='GA community'
      - APP_KEY=base64:EyXJLsARaJZ1mQp8NqdFkFY/3BCfq1+0NPEZub5f120=

    # configure your .env file for mailing test  
    
    # for the first time, uncomment the command below to add your vendor locally instead of the uncommented one
    # command: bash prepare.sh
    command: php artisan serve --host 0.0.0.0

  # nginx:
  #   image: nginx:stable
  #   container_name: nginx
  #   # restart: "unless-stopped"
  #   volumes:
  #     - ./nginx/conf/nginx.conf:/etc/nginx/nginx.conf:ro
  #     - ./nginx/conf.d:/etc/nginx/conf.d
  # healthcheck:
  # test: ['CMD', '/bin/healthcheck.sh']
  # test: service nginx status || exit 1
  # interval: 20s
  # timeout: 5s
  # retries: 3
  # ports:
  #   - "80:80"
  #   - "443:443"
  # depends_on:
  #     # condition: service_healthy
  #     - laravel

volumes:
  db-data:
